1. Интерфейс, в отличае от класса, не содержит реализацию своих членов. Если нам нужно чтобы определенный метод был тоько у определнного настледника, а не у всех, 
мы можем создать интерфейс и реализовать его у данного наследника.
2. Обобщения нужны в тех случаях, когда мызаранее не знаем, какой тип данных юудет использоваться в методе, либо когда нам нужно чтобы метод принимал разные типы данных. Например в
каких либо сохранениея, когда нам нужно сохранять разные типы данных, string, int, float - это поможет сократить код, вместо 3 методов для разных типов, будет один обобщенный.